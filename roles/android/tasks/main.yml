---
   - user: name=vagrant group=admin
   - name: update apt cache
     apt: update_cache=yes

   - name: install required packages require for appium android
     apt: name={{ item }} state=present
     with_items:
        - python-software-properties
        - nodejs
        - node
        - npm
        - curl
        - wget
        - make
        - g++
        - gcc
        - git
        - unzip
        - openjdk-6-jre
        - patch
        - bzip2
        - build-essential
        - openssl
        - libcurl4-openssl-dev
        - libsasl2-2
        - libsasl2-dev
        - libcurl3
        - libreadline6
        - libreadline6-dev
        - git-core
        - zlib1g
        - zlib1g-dev
        - libssl-dev
        - libyaml-dev
        - libsqlite3-dev
        - sqlite3
        - libxml2-dev
        - libxslt1-dev
        - libxslt-dev
        - autoconf
        - libc6-dev
        - libgdbm-dev
        - ncurses-dev
        - automake
        - libtool
        - bison
        - subversion
        - pkg-config
        - libffi-dev
        - libcurl3-dev
        - imagemagick
        - libmagickwand-dev
        - libpcre3-dev
   - name: update apt cache
     apt: update_cache=yes

   - name: Install Ruby Gems
     gem: name={{item}} state=latest
     with_items:
       - bundler
       - rake

   - gem: name=rake state=latest
   - gem: name=bundler state=latest

   - name: install ant
     action: apt name=ant state=latest

   - name: source bashrc
     file: path=/home/vagrant/.bashrc state=touch mode="u=rw,g=r,o=r"
     
   - name: make download directory 
     file: path={{ ansible_cache_dir }} state=directory mode=0777
     sudo: yes

   - name: download Android SDK
     get_url: dest={{ ansible_cache_dir }} url=http://dl.google.com/android/{{ android_zipfile }}
     sudo: yes

   - name: make opt dir for user
     file: path=/opt/android/ state=directory mode=0777
     sudo: yes

   - name: unpack Android SDK
     unarchive: copy=no src={{ ansible_cache_dir }}/{{ android_zipfile }} dest=/opt/android/ creates=/opt/android/{{ android_folder }}
     sudo: yes

   - name: chown files
     file: path=/opt/android/{{ android_folder }} recurse=yes state=directory

   - name: install android platform-tools
     shell: "echo y | /opt/android/android-sdk-linux/tools/android update sdk --no-ui --all --filter {{ item }}"
     with_items:
        - "tools"
        - "platform-tools"
        - "build-tools-22.0.1"
        - "build-tools-21.1.2"
        - "build-tools-19.1.0"
        - "android-21"
        - "android-20"
        - "android-19"
        - "sys-img-x86-android-21"
        - "sys-img-x86-android-19"
        - "sys-img-armeabi-v7a-android-19"
        - "addon-google_apis-google-22"
        - "extra-android-support"
        - "extra-google-m2repository"
        - "extra-google-google_play_services"
        - "extra-android-m2repository"

   - name: add ANDROID_HOME
     action: lineinfile dest=/home/vagrant/.bashrc line="{{ item }}"
     with_items:
        - 'export ANDROID_HOME=/opt/{{ android_folder }}'
        - 'export ANDROID_TOOLS=$ANDROID_HOME/tools/'
        - 'export ANDROID_PLATFORM_TOOLS=$ANDROID_HOME/platform-tools/'
        - 'export PATH=$PATH:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS'
     sudo: no

   - name: Copy android rules file
     copy: src=android.rules dest=/etc/udev/rules.d/51-android.rules owner=root mode="0644"

   - name: restart udev
     service: name=udev state=restarted

   - name: download Android NDK
     get_url: dest={{ ansible_cache_dir }} url=http://dl.google.com/android/repository/{{ android_ndk_zipfile }} timeout=3000
     sudo: yes

   - name: unpack Android NDK
     unarchive: copy=no src={{ ansible_cache_dir }}/{{ android_ndk_zipfile }} dest=/opt/android creates=/opt/android/{{ android_ndk_folder }}
     sudo: yes 

   - name: chown files
     file: path=/opt/android/{{ android_ndk_folder }} recurse=yes state=directory 

   - include: install_on_ubuntu.yml
